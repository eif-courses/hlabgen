
🚀 Starting generation for app: WarehouseAPI (mode=hybrid)
✅ Rule-based scaffold created
2025/10/20 05:16:11 🧠 Starting ML-based code generation...
🌍 Using custom endpoint: https://api.openai.com/v1
🤖 Trying model: gpt-4o-mini
⏱️  Model call took 31.266646031s (model: gpt-4o-mini, attempt: 1)
✅ Parsed 12 files

📊 Generation Summary:
  • Duration: 31.267271833s
  • Primary Success: true
  • Repair Attempts: 0
  • Final Success: true
  • Error: 
✅ WarehouseAPI generation completed successfully
🧾 Saved ML metrics → experiments/WarehouseAPI/gen_metrics.json
📝 Processing: internal/models/item.go
✅ Written: experiments/out/WarehouseAPI/internal/models/item.go
📝 Processing: internal/models/location.go
✅ Written: experiments/out/WarehouseAPI/internal/models/location.go
📝 Processing: internal/models/shipment.go
✅ Written: experiments/out/WarehouseAPI/internal/models/shipment.go
📝 Processing: internal/handlers/item.go
🔧 Fixed handler signature for CreateItem
🔧 Fixed handler signature for GetItems
🔧 Fixed handler signature for GetItem
🔧 Fixed handler signature for UpdateItem
🔧 Fixed handler signature for DeleteItem
✅ Written: experiments/out/WarehouseAPI/internal/handlers/item.go
📝 Processing: internal/handlers/location.go
🔧 Fixed handler signature for CreateLocation
🔧 Fixed handler signature for GetLocations
🔧 Fixed handler signature for GetLocation
🔧 Fixed handler signature for UpdateLocation
🔧 Fixed handler signature for DeleteLocation
✅ Written: experiments/out/WarehouseAPI/internal/handlers/location.go
📝 Processing: internal/handlers/shipment.go
🔧 Fixed handler signature for CreateShipment
🔧 Fixed handler signature for GetShipments
🔧 Fixed handler signature for GetShipment
🔧 Fixed handler signature for UpdateShipment
🔧 Fixed handler signature for DeleteShipment
✅ Written: experiments/out/WarehouseAPI/internal/handlers/shipment.go
📝 Processing: internal/handlers/item_test.go
🔧 Fixed test signature for TestCreateItem
🔧 Fixed test signature for TestGetItems
✅ Auto-fixed test signatures in internal/handlers/item_test.go
✅ Written: experiments/out/WarehouseAPI/internal/handlers/item_test.go
📝 Processing: internal/handlers/location_test.go
🔧 Fixed test signature for TestCreateLocation
🔧 Fixed test signature for TestGetLocations
✅ Auto-fixed test signatures in internal/handlers/location_test.go
✅ Written: experiments/out/WarehouseAPI/internal/handlers/location_test.go
📝 Processing: internal/handlers/shipment_test.go
🔧 Fixed test signature for TestCreateShipment
🔧 Fixed test signature for TestGetShipments
✅ Auto-fixed test signatures in internal/handlers/shipment_test.go
✅ Written: experiments/out/WarehouseAPI/internal/handlers/shipment_test.go
📝 Processing: internal/routes/routes.go
🔧 Fixed Register function parameter
✅ Written: experiments/out/WarehouseAPI/internal/routes/routes.go
📝 Processing: cmd/main.go
✅ Written: experiments/out/WarehouseAPI/cmd/main.go
📝 Processing: tasks.md
⚠️  Syntax validation failed for tasks.md: temp.go:1:1: illegal character U+0023 '#'
🔧 Attempting additional fixes...
❌ Could not auto-fix syntax errors in tasks.md
✅ Written: experiments/out/WarehouseAPI/tasks.md

🔧 Total rule-based fixes applied: 25

🔧 Running auto-fix on generated files...

🔧 Auto-fixing all files in: experiments/out/WarehouseAPI

📝 Fixing test function signatures...
  ✅ Fixed test signatures in item_test.go
  ✅ Fixed test signatures in location_test.go
  ✅ Fixed test signatures in shipment_test.go

📝 Fixing handler function signatures...

📝 Fixing routes Register function...

📝 Fixing missing commas in struct literals...

📝 Ensuring test file imports...

✅ Applied 3 fixes total!
✅ Auto-fix completed successfully

🔍 Validating Go syntax...
✅ All generated files have valid Go syntax
2025/10/20 05:16:43 ✅ Generated 3 test file(s)

🔧 Fixing import paths...
2025/10/20 05:16:43 🔧 Detected module name: WarehouseAPI — fixing imports...
2025/10/20 05:16:43 ✅ No import fixes needed
🔧 Running go mod tidy...
✅ Dependencies tidied

🔍 Final syntax validation after fixes...
✅ All syntax errors resolved
✅ ML generation completed (31.27s)
📁 Saved per-package coverage → experiments/out/WarehouseAPI/coverage.json
🧾 Added summary row (with ML metrics) → experiments/logs/coverage.csv

--- go test summary ---

--- experiments/out/WarehouseAPI/internal/handlers ---
=== RUN   TestCreateItem
--- PASS: TestCreateItem (0.00s)
=== RUN   TestGetItems
--- PASS: TestGetItems (0.00s)
=== RUN   TestCreateLocation
--- PASS: TestCreateLocation (0.00s)
=== RUN   TestGetLocations
--- PASS: TestGetLocations (0.00s)
=== RUN   TestCreateShipment
--- PASS: TestCreateShipment (0.00s)
=== RUN   TestGetShipments
--- PASS: TestGetShipments (0.00s)
PASS
coverage: 53.3% of statements
ok  	WarehouseAPI/internal/handlers	0.004s

------------------------
✅ Validation completed in 1.12s

📊 Summary for WarehouseAPI:
  • BuildSuccess = true
  • LintWarnings = 3
  • TestsPass    = true
  • Coverage     = 53.3%
  • Generation Duration = 31.267271833s
  • Repair Attempts = 0
  • Rule Fixes   = 25
  • Mode: hybrid
🧾 Appended 30 experiments into experiments/logs/summary.csv

🧾 Generating Markdown summary from JSON metrics...
📊 Markdown results saved → experiments/logs/results.md
✅ Summary successfully written to experiments/logs/results.md

✅ Experiment complete..
