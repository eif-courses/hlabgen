
🚀 Starting generation for app: VotingAPI (mode=hybrid)
✅ Rule-based scaffold created
2025/10/19 13:07:53 🧠 Starting ML-based code generation...
🌍 Using custom endpoint: https://api.openai.com/v1
🤖 Trying model: gpt-3.5-turbo
⏱️  Model call took 5.877865465s (model: gpt-3.5-turbo, attempt: 1)
✅ Parsed 5 files

📊 Generation Summary:
  • Duration: 5.878080353s
  • Primary Success: true
  • Repair Attempts: 0
  • Final Success: true
  • Error: 
✅ VotingAPI generation completed successfully
🧾 Saved ML metrics → experiments/VotingAPI/gen_metrics.json
📝 Processing: internal/models/election.go
✅ Written: experiments/out/VotingAPI/internal/models/election.go
📝 Processing: internal/handlers/election.go
🔧 Fixed handler signature for CreateElection
🔧 Fixed handler signature for GetElections
✅ Written: experiments/out/VotingAPI/internal/handlers/election.go
📝 Processing: internal/handlers/election_test.go
🔧 Fixed test signature for TestCreateElection
🔧 Fixed test signature for TestGetElections
✅ Auto-fixed test signatures in internal/handlers/election_test.go
✅ Written: experiments/out/VotingAPI/internal/handlers/election_test.go
📝 Processing: internal/routes/routes.go
🔧 Fixed Register function parameter
✅ Written: experiments/out/VotingAPI/internal/routes/routes.go
📝 Processing: cmd/main.go
✅ Written: experiments/out/VotingAPI/cmd/main.go

🔧 Total rule-based fixes applied: 10

🔧 Running auto-fix on generated files...

🔧 Auto-fixing all files in: experiments/out/VotingAPI

📝 Fixing test function signatures...
  ✅ Fixed test signatures in election_test.go

📝 Fixing handler function signatures...

📝 Fixing routes Register function...

📝 Fixing missing commas in struct literals...

📝 Ensuring test file imports...

✅ Applied 1 fixes total!
✅ Auto-fix completed successfully

🔍 Validating Go syntax...
✅ All generated files have valid Go syntax
2025/10/19 13:07:59 ✅ Generated 1 test file(s)

🔧 Fixing import paths...
2025/10/19 13:07:59 🔧 Detected module name: VotingAPI — fixing imports...
2025/10/19 13:07:59 ✅ No import fixes needed
🔧 Running go mod tidy...
✅ Dependencies tidied

🔍 Final syntax validation after fixes...
✅ All syntax errors resolved
✅ ML generation completed (5.88s)
📁 Saved per-package coverage → experiments/out/VotingAPI/coverage.json
🧾 Added summary row (with ML metrics) → experiments/logs/coverage.csv

--- go test summary ---

--- experiments/out/VotingAPI/internal/handlers ---
=== RUN   TestCreateElection
--- PASS: TestCreateElection (0.00s)
=== RUN   TestGetElections
--- PASS: TestGetElections (0.00s)
PASS
coverage: 66.7% of statements
ok  	VotingAPI/internal/handlers	0.002s

------------------------
✅ Validation completed in 0.50s

📊 Summary for VotingAPI:
  • BuildSuccess = true
  • LintWarnings = 0
  • TestsPass    = true
  • Coverage     = 66.7%
  • ML Duration  = 0s (repair 0)
  • Rule Fixes   = 0
🧾 Appended 29 experiments into experiments/logs/summary.csv

🧾 Generating Markdown summary from JSON metrics...
📊 Markdown results saved → experiments/logs/results.md
✅ Summary successfully written to experiments/logs/results.md

✅ Experiment complete.
